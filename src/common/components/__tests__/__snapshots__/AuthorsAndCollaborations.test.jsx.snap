// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AuthorsAndCollaborations does not render bullet if authors missing 1`] = `
<React.Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          value: "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          value: "Test 1 Group",
        },
        Immutable.Map {
          value: "Test 2 Group",
        },
      ]
    }
  />
  <AuthorList
    authors={
      Immutable.List [
      ]
    }
    enableShowAll={false}
    forSupervisors={false}
    limit={5}
    recordId={12345}
    total={-1}
    wrapperClassName="di"
  />
</React.Fragment>
`;

exports[`AuthorsAndCollaborations does not render bullet if authors missing with single collaboration 1`] = `
<React.Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          value: "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
      ]
    }
  />
  <AuthorList
    authors={
      Immutable.List [
      ]
    }
    enableShowAll={false}
    forSupervisors={false}
    limit={1}
    recordId={12345}
    total={-1}
    wrapperClassName="di"
  />
</React.Fragment>
`;

exports[`AuthorsAndCollaborations renders collaboration list and author list if collaborations and authors have multiple items 1`] = `
<React.Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          value: "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          value: "Test 1 Group",
        },
        Immutable.Map {
          value: "Test 2 Group",
        },
      ]
    }
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
        Immutable.Map {
          full_name: "Test, Guy 2",
        },
      ]
    }
    enableShowAll={true}
    forSupervisors={false}
    limit={5}
    recordId={12345}
    total={12}
    wrapperClassName="di"
  />
</React.Fragment>
`;

exports[`AuthorsAndCollaborations renders only author list if collaborations are missing (default author props) 1`] = `
<AuthorList
  authors={
    Immutable.List [
      Immutable.Map {
        full_name: "Test, Guy 1",
      },
    ]
  }
  enableShowAll={false}
  forSupervisors={false}
  limit={5}
  recordId={12345}
  total={-1}
  wrapperClassName={null}
/>
`;

exports[`AuthorsAndCollaborations renders only author list if collaborations are missing (extra author props) 1`] = `
<AuthorList
  authors={
    Immutable.List [
      Immutable.Map {
        full_name: "Test, Guy 1",
      },
    ]
  }
  enableShowAll={true}
  forSupervisors={false}
  limit={5}
  recordId={12345}
  total={1}
  wrapperClassName={null}
/>
`;

exports[`AuthorsAndCollaborations renders only one collaboration and author for the collaboration 1`] = `
<React.Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
        Immutable.Map {
          value: "Test Collab 1",
        },
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
      ]
    }
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
      ]
    }
    enableShowAll={true}
    forSupervisors={false}
    limit={5}
    recordId={12345}
    total={1}
    wrapperClassName="di"
  />
  <span>
     for the collaboration.
  </span>
</React.Fragment>
`;

exports[`AuthorsAndCollaborations renders only one collaboration and author list with limit 1 if there are multiple authors 1`] = `
<React.Fragment>
  <CollaborationList
    collaborations={
      Immutable.List [
      ]
    }
    collaborationsWithSuffix={
      Immutable.List [
        Immutable.Map {
          value: "Test 1 Group",
        },
      ]
    }
  />
  <span
    className="mh1"
  >
    •
  </span>
  <AuthorList
    authors={
      Immutable.List [
        Immutable.Map {
          full_name: "Test, Guy 1",
        },
        Immutable.Map {
          full_name: "Test, Guy 2",
        },
      ]
    }
    enableShowAll={true}
    forSupervisors={false}
    limit={1}
    recordId={12345}
    total={12}
    wrapperClassName="di"
  />
</React.Fragment>
`;
